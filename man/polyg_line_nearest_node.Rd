% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/polyg_line_nearest_node.R
\name{polyg_line_nearest_node}
\alias{polyg_line_nearest_node}
\title{Shortest linestring connections from an \code{sf} POINT object to nodes of a \code{sf} LINESTRING object}
\usage{
polyg_line_nearest_node(
  input_points,
  input_lines,
  cast_substring = TRUE,
  ignore_equal = TRUE
)
}
\arguments{
\item{input_points}{object of class sf or sfc with geometry type POINT or MULTIPOINT.}

\item{input_lines}{object of class sf or sfc with geometry type LINESTRING or MULTILINESTRING.}

\item{cast_substring}{logical; should the input linestring be cast to substring? Default is \code{TRUE}.}

\item{ignore_equal}{logical; should output linestrings which are exactly equal to
one or more elements in \code{input_lines} be ignored? Default is \code{TRUE}.}
}
\value{
An \code{sf} object of type LINESTRING containing the minimum distance linestring
connections from each point in \code{input_points} to nodes in \code{input_lines}.
}
\description{
Compute the minimum distance linestring connection from an \code{sf} POINT object to nodes of an \code{sf} LINESTRING object
}
\details{
For each point, the function computes the minimum distance to the intersection nodes of a set of
linestrings and outputs the minimum distance linestrings. Empty linestrings as a result of
equality between \code{input_points} and nodes in \code{input_lines}. If \code{input_points} or \code{input_lines} contain
geometries of type MULTIPOINT or MULTILINESTRING, they are converted to POINT and LINESTRING before computing.
}
